Роутинг

Используется для того, чтобы раскрывать какой либо компонент  в зависимости от url страницы
url меняется с помощью как бы своей ссылки в react (Link) её нужно импортировать
import { Link } from 'react-router-dom';
Указываем её как обычный тег <Link></Link>
После указываем атрибут to, он работает также как href у ссылки a
В этот атрибут мы указываем / и url

Также есть NavLink, испортируется также как и Link
Он работает также, но есть определённые отличия
Мы можем указать атрибут activeClassName='_active' и при нажатии на эту ссылку
К ней добавится класс _active и также нужно добавить атрибут exact, потому что
При клике на другую ссылку, класс не будет убираться, это видимо ошибка такая
Потом создадим Роутинг

Но к сожалению с приходом Router 6, activeClassName больше нету, и придётся использовать такой метод
className={({ isActive }) => isActive ? 'active' : "item"}
То есть здесь условие , если isActive то active или item

И также вместо просто exact, стоит указать exact="true"

Импортируем BrowserRouter import { BrowserRouter } from 'react-router-dom';

И чтобы использовать  сами Route то нужно их обвернуть в BrowserRouter
Поэтому импортируем и их import { BrowserRouter, Route } from 'react-router-dom';
И также нужно Все Route обвернуть в Routes, их тоже импортируем  import { BrowserRouter, Route, Routes} from 'react-router-dom';
Потом в Route есть атрибуты path и component(element)
В атрибут path мы будем указывать url который будет в странице,то есть когда в url страницы будет допустим
/profile то мы откроем component
А component это наш компонент, допустим тот же profile, также вместо component можно использовать element, он выводит не только компонент
Но и другое, а если хотим вывести компонент, то выводим также, как и выводим все компоненты <Component />
Также может быть в url допустим какой-либо третий профиль - /profile/3 , то просто запись <Route path='/profile' Component={Компонент}></Route> будет
выводить компонент, но если мы хотим выводить компонент, только когда /profile, а точнее только когда, в url находится адрес, который в path
То мы можем поставить атрибут exact к Route, НО! В обновлении так не работает, поэтому надо поставить такую структуру path="/profile/*"


<BrowserRouter>
	<Routes>
		<Route path='/profile' Component={Компонент}></Route>
	</Routes>
</BrowserRouter>


Дальше поговорим о конструкции <Switch></Switch>