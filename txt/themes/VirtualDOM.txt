Ref

С помощью конструкции React.createRef() создаём ссылку и помещаем в переменную

let link = React.createRef()

И потом добавляем к элементу ref={название ссылки, которая будет ссылаться на текущий элемент}

Допустим возьмём <input ref={link} />

И после мы можем взять value у этого инпута

let value = link.current.value; 


Также стоит упомянуть, что ref это не только для инпута
Это по сути как мы ищем document.querySelector("...")
Только немного другим образом



(86 lesson)


Как работает VirtualDOM он делает тот же самый DOM 
после react отрисовывает настоящий DOM (это происходит в первую отрисовку)

после допустим мы нажали кнопочку, всё перерисовалось, и react берет новый jsx
и создаёт новую версию VirtualDOM после мы не идём сразу отрисовывать новый DOM

а react делает такую штуку, как Reconciliation
и react сравнивает старую версию DOM с текущей
и находит отличия, и допустим отличие

мы нажали на кнопку и она стала true, и он это находит и меняет в VirtualDOM, то есть 
не весь VirtualDOM изменяет, а меняет нужный элемент и на базе этих изменений идёт
отрисовывать DOM

- То есть меняет точечно элементы

И само определение: 

Виртуальный DOM - это концепция программирования, в которой идеальное или «виртуальное» представление
пользовательского интерфейса хранится в памяти и синхронизируется с «реальным» DOM с помощью библиотеки, такой как ReactDOM. 


JSX - js который отдаётся React и выполняя этот js создаёт новую версию VirtualDOM

JSX - превращается в js с помощью babel
На этапе